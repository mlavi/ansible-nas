# shellcheck disable=SC1000-SC9999
# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.require_version ">= 2.2.2"

Vagrant.configure(2) do |config|
  config.vm.define "ansible-nas-test" do
    config.vm.box = "ubuntu/jammy64"
    # `vagrant box outdated`. This is not recommended.
    config.vbguest.auto_update = false # saves time, embedded 6.0 forward compatible?
    config.vm.box_check_update = false # otherwise, every vagrant up

    # config.vm.network "private_network", ip: "172.30.1.5"
    # config.ssh.insert_key = false

    config.vm.hostname = ENV["VAGRANT_HOSTNAME"]
    # config.vm.network "forwarded_port", guest: 389, host: 389 #, host_ip: "127.0.0.1"
    # # https://developer.hashicorp.com/vagrant/docs/networking/public_network
    config.vm.network "public_network", bridge: ENV["HOST_INTERFACE"],
      hostname: true, ip: ENV["VAGRANT_IP"]
    config.vm.synced_folder "../../../gitlab.com/mlavi/ansible-collection/mlavi/homelab/roles/samba4_ad_dc/files/",
      "/home/vagrant/role-files", disabled: false
    # config.vm.synced_folder "../../server/bootstrap/",
    #   ENV["VAGRANT_SYNCED_FOLDER"], disabled: false

    # config.vm.provision "ansible_local" do |ansible|
    #   ansible.compatibility_mode = "2.0"
    #   ansible.galaxy_role_file = "requirements.yml"
    #   ansible.inventory_path = "tests/inventories/integration_testing/inventory"
    #   ansible.playbook = "nas.yml"
    #   ansible.become = true
    #   ansible.raw_arguments = [
    #     "--extra-vars @tests/test.yml"
    #   ]

    config.vm.provision "shell", inline: <<-SHELL
      uname -a && hostname -f
      echo 'ssh-keygen -f ~/.ssh/known_hosts -R "${VAGRANT_HOSTNAME}"'
      echo 'ansible-playbook mlavi.samba-vm.yaml'
    SHELL

    # end
  end
end
